plugins {
    id 'fabric-loom'
}


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version

minecraft {
}

repositories {
    maven {
        name "CottonMC"
        url "https://server.bbkr.space/artifactory/libs-release"
    }
    maven { url 'https://maven.terraformersmc.com/releases/com/terraformersmc/modmenu/' }
    maven { url 'https://maven.shedaniel.me' }
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }
	maven {
		name "Cloth"
		url "https://maven.shedaniel.me/"
	}
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}"

    modImplementation "me.zeroeightsix:fiber:${project.fiber_version}"
    include "me.zeroeightsix:fiber:${project.fiber_version}"

    modImplementation("io.github.prospector:modmenu:${modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    compileOnly("com.google.code.findbugs:jsr305:3.0.2") { transitive = false }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from "LICENSE-FIBER"
}
